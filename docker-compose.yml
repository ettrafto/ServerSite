version: '3.8'

services:
  api-server:
    build: ./api-server
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      - DATABASE_URL=file:./data/prod.db
      - REDIS_URL=redis://redis:6379
      - DEV_ALLOW_REGISTER=false
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  dashboard-web:
    build: ./dashboard-web
    ports:
      - "80:80"
    depends_on:
      - api-server
    restart: unless-stopped

volumes:
  redis_data:
